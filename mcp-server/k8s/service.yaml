# Services for MCP Server Phase 6-3
# Production-ready Kubernetes services

apiVersion: v1
kind: Service
metadata:
  name: mcp-server-service
  namespace: mcp-server
  labels:
    app: mcp-server
    environment: production
    version: phase6-3
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8003"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8003
    targetPort: 8003
    protocol: TCP
  - name: metrics
    port: 8004
    targetPort: 8003
    protocol: TCP
  selector:
    app: mcp-server
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800

---
# LoadBalancer Service for external access
apiVersion: v1
kind: Service
metadata:
  name: mcp-server-lb
  namespace: mcp-server
  labels:
    app: mcp-server
    environment: production
    type: load-balancer
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "tcp"
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:acm:region:account:certificate/cert-id"
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 80
    targetPort: 8003
    protocol: TCP
  - name: https
    port: 443
    targetPort: 8003
    protocol: TCP
  selector:
    app: mcp-server
  loadBalancerSourceRanges:
  - 0.0.0.0/0

---
# Redis Service
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: mcp-server
  labels:
    app: redis
    environment: production
spec:
  type: ClusterIP
  ports:
  - name: redis
    port: 6379
    targetPort: 6379
    protocol: TCP
  selector:
    app: redis

---
# Prometheus Service
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
  namespace: mcp-server
  labels:
    app: prometheus
    environment: production
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
spec:
  type: ClusterIP
  ports:
  - name: prometheus
    port: 9090
    targetPort: 9090
    protocol: TCP
  selector:
    app: prometheus

---
# Grafana Service
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  namespace: mcp-server
  labels:
    app: grafana
    environment: production
spec:
  type: ClusterIP
  ports:
  - name: grafana
    port: 3000
    targetPort: 3000
    protocol: TCP
  selector:
    app: grafana

---
# Headless Service for StatefulSet (if needed)
apiVersion: v1
kind: Service
metadata:
  name: mcp-server-headless
  namespace: mcp-server
  labels:
    app: mcp-server
    environment: production
    type: headless
spec:
  clusterIP: None
  ports:
  - name: http
    port: 8003
    targetPort: 8003
    protocol: TCP
  selector:
    app: mcp-server