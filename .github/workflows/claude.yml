name: Claude Code

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@beta
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}

          mcp_config: |
            {
              "mcpServers": {
                "sequential-thinking": {
                  "command": "npx",
                  "args": [
                    "-y",
                    "@modelcontextprotocol/server-sequential-thinking"
                  ]
                },
                "perplexity-ask": {
                  "command": "npx",
                  "args": [
                    "-y",
                    "server-perplexity-ask"
                  ],
                  "env": {
                    "PERPLEXITY_API_KEY": "${{ secrets.PERPLEXITY_API_KEY }}"
                  }
                }
              }
            }
            
          allowed_tools: '[\"mcp__sequential-thinking__sequentialthinking\", \"mcp__perplexity-ask__perplexity_ask\", \"Bash(*)\",View,GlobTool,GrepTool,BatchTool]'
          #allowed_tools: '["mcp__sequential-thinking__sequentialthinking", "mcp__perplexity-ask__perplexity_ask", "Bash(npm install)", "Bash(npm test)", "Bash(npm run test:*)", "Bash(npm run build)", "Bash(npm run lint)", "Bash(pip install *)", "Bash(pytest)", "Bash(pytest *)", "Bash(python -m pytest)", "Bash(tox)", "Bash(cargo test)", "Bash(cargo build)", "Bash(cargo clippy)", "Bash(git checkout *)", "Bash(git add *)", "Bash(git commit *)", "Bash(git push *)", "Bash(git status)", "Bash(git diff)", "Bash(git branch *)", "Bash(git config *)", "Bash(git rm *)"]'
          #allowed_tools: '["mcp__sequential-thinking__sequentialthinking", "mcp__perplexity-ask__perplexity_ask", "Bash(npm install)", "Bash(npm test)", "Bash(npm run test:*)", "Bash(npm run build)", "Bash(npm run lint)", "Bash(pip install *)", "Bash(pytest)", "Bash(pytest *)", "Bash(python -m pytest)", "Bash(tox)", "Bash(cargo test)", "Bash(cargo build)", "Bash(cargo clippy)"]' 
          # Important: Each MCP tool from your server must be listed here, comma-separated
          # ... other inputs
          
          # Optional: Specify model (defaults to Claude Sonnet 4, uncomment for Claude Opus 4)
          # model: "claude-opus-4-20250514"
          
          # Optional: Customize the trigger phrase (default: @claude)
          # trigger_phrase: "/claude"
          
          # Optional: Trigger when specific user is assigned to an issue
          # assignee_trigger: "claude-bot"
          
          # Optional: Allow Claude to run specific commands
          # allowed_tools: "Bash(npm install),Bash(npm run build),Bash(npm run test:*),Bash(npm run lint:*)"
          
          # Optional: Add custom instructions for Claude to customize its behavior for your project
          custom_instructions: |
            日本語で報告してください。
          # custom_instructions: |
          #   Follow our coding standards
          #   Ensure all new code has tests
          #   Use TypeScript for new files
          
          # Optional: Custom environment variables for Claude
          # claude_env: |
          #   NODE_ENV: test

